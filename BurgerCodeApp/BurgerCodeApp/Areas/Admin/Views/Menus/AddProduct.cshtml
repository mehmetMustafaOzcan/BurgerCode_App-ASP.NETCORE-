@using BurgerCodeApp.Areas.Admin.Models;
@model MenuVm

@{
    ViewData["Title"] = "AddProduct";
}


<h4>Add Product to Menu</h4>
<div class="text-end">
    <a class="btn btn-ghost-danger" asp-action="Index"><i class="fas fa-times"></i></a>
</div>
<hr />
<div class="row">
    <div class="col-md-6">
        <form asp-action="AddProduct" id="myForm" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">

                <div class="display-5 text-muted">
                    <label>#ID @Model.MenuId</label>
                </div>
                <h4 class="control-label"> @Model.MenuName</h4><hr />
            </div>



            <h5>Products</h5>
            <input asp-for="MenuId" class="invisible"/>
            <div>
                <label asp-for="ProductId" class="control-label"></label>
                <select asp-for="ProductId" class="form-control" asp-items="ViewBag.ProductId"></select>
            </div>
            <div>
                <label asp-for="ProductQuantity" class="control-label">Product Quantity</label>
                <input asp-for="ProductQuantity" class="form-control" value="1" min="1" max="10" />
            </div>

            <div class="form-group">
                <button type="button" id="submitbtn" class="btn btn-info m-2">Ekle</button>
            </div>
        </form>
    </div>
    <div class="col-md-6 alert alert-info">
        <table class="table" id="t">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">Product ID</th>
                    <th scope="col">Product Name</th>
                    <th scope="col">Quantity</th>
                </tr>
            </thead>
            <tbody>
            </tbody>

        </table>
    </div>
</div>






@* <script>
        $(document).ready(function () {
            // Ekleme işlemi yapılacak olan AJAX isteği
            $("#submitbtn").click(function (event) {
                event.preventDefault();

                //  Ürün ekle isteği burada gerçekleştirilecek
                $.ajax({
                    url: "", // Post isteğinin yapıldığı URL'yi buraya yazın
                    method: "POST",
                    data: $("#myForm").serialize(),
                    success: function (response) {
                        console.log("İstek başarıyla gönderildi.");
                        tabloyuGuncelle(); // Ekleme işlemi tamamlandıktan sonra tabloyu güncelle
                    },
                    error: function (xhr, status, error) {
                        console.log("Bir hata oluştu. İstek gönderilemedi.");
                    }
                });
            });

            // Tabloyu güncelleme işlemini yapacak fonksiyon
            function tabloyuGuncelle() {
                // AJAX isteğiyle tablo verilerini getir
                $.ajax({
                    url: "/Admin/Menus/GetMenuDetails/@Model.MenuId", // Get isteğinin yapıldığı URL'yi buraya yazın
                    method: "GET",
                    success: function (response) {
                        // Tabloya verileri yerleştirme
                        var tableBody = $("#t tbody");
                        tableBody.empty(); // Tablonun içeriğini temizle

                        // Her bir veri öğesi için yeni bir tablo satırı oluştur
                        response.forEach(function (item) {
                            var newRow = $("<tr>");
                            newRow.append($("<td>").text(item.productName));
                            newRow.append($("<td>").text(item.quantity));
                            tableBody.append(newRow);
                        });
                    },
                    error: function (xhr, status, error) {
                        console.log("Bir hata oluştu. Get isteği gerçekleştirilemedi.");
                        console.log("Hata: " + error);
                    }
                });
            }

            // Sayfa yüklendiğinde tabloyu ilk kez doldur
            tabloyuGuncelle();
        });


    </script>*@







@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            // Ekleme işlemi yapılacak olan AJAX isteği
            $("#submitbtn").click(function (event) {
                event.preventDefault();

                // Ürün ekle isteği burada gerçekleştirilecek
                $.ajax({
                    url: "", // Post isteğinin yapıldığı URL'yi buraya yazın
                    method: "POST",
                    data: $("#myForm").serialize(),
                    success: function (response) {
                        console.log("İstek başarıyla gönderildi.");
                        tabloyuGuncelle(); // Ekleme işlemi tamamlandıktan sonra tabloyu güncelle
                    },
                    error: function (xhr, status, error) {
                        console.log("Bir hata oluştu. İstek gönderilemedi.");
                    }
                });
            });

            // Silme işlemi yapılacak olan AJAX isteği
            $(document).on("click", ".delete-btn", function () {
                var productId = $(this).data("productid");
                var menuId = "@Model.MenuId"; // Menü ID'sini alın
                // Ürün sil isteği burada gerçekleştirilecek
                $.ajax({
                    url: "/Admin/Menus/DeleteProduct", // Silme isteğinin yapıldığı URL'yi buraya yazın
                    method: "POST",
                    data: { productId: productId, menuId: menuId },
                    success: function (response) {
                        console.log("İstek başarıyla gönderildi.");
                        tabloyuGuncelle(); // Silme işlemi tamamlandıktan sonra tabloyu güncelle
                    },
                    error: function (xhr, status, error) {
                        console.log("Bir hata oluştu. İstek gönderilemedi.");
                    }
                });
            });

            // Tabloyu güncelleme işlemini yapacak fonksiyon
            function tabloyuGuncelle() {
                // AJAX isteğiyle tablo verilerini getir
                $.ajax({
                    url: "/Admin/Menus/GetMenuDetails/@Model.MenuId", // Get isteğinin yapıldığı URL'yi buraya yazın
                    method: "GET",
                    success: function (response) {
                        // Tabloya verileri yerleştirme
                        var tableBody = $("#t tbody");
                        tableBody.empty(); // Tablonun içeriğini temizle

                        // Her bir veri öğesi için yeni bir tablo satırı oluştur
                        response.forEach(function (item) {
                            var newRow = $("<tr>");
                            newRow.append($("<td>").text(item.productName));
                            newRow.append($("<td>").text(item.quantity));

                            var deleteButton = $("<button>")
                                .addClass("btn btn-danger delete-btn")
                                .text("Sil")
                                .attr("data-productid", item.productId);

                            newRow.append($("<td>").append(deleteButton));
                            tableBody.append(newRow);
                        });
                    },
                    error: function (xhr, status, error) {
                        console.log("Bir hata oluştu. Get isteği gerçekleştirilemedi.");
                        console.log("Hata: " + error);
                    }
                });
            }

            // Sayfa yüklendiğinde tabloyu ilk kez doldur
            tabloyuGuncelle();
        });
    </script>
}


