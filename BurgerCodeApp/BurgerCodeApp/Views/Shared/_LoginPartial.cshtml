@using Microsoft.AspNetCore.Identity
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager


@if (SignInManager.IsSignedIn(User))
{

    <a class="nav-item nav-link" asp-area="Identity" asp-controller="Account" asp-action="Register" title="Manage">Hello @User.Identity?.Name!</a>


   @* <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">

        <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
    </form>*@
    <div class=" d-flex justify-content-center align-items-center ms-2">
        <div class="">
            <a class="btn btn-danger  " asp-action="Basket" asp-controller="BasketDetails">
                <i class="fas fa-shopping-cart"></i>
            </a>
        </div>
    </div>


    <a class="nav-link btn btn-link text-dark" asp-area="Identity" asp-action="Logout" asp-controller="Account" >Çıkış</a>
    <div>
   
    </div>

}
else
{

    <a class="nav-item nav-link" asp-area="Identity" asp-controller="Account" asp-action="Register">Register</a>


    <a class="nav-item nav-link" asp-area="Identity" asp-controller="Account" asp-action="Login">Login</a>


}

